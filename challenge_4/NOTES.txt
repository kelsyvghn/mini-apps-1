CONNECT FOUR

Environment Setup
  x- create package.json FIRST (webpack won't load properly without)

  x- install webpack
    x- npm install webpack --save-dev
    x- npm install webpack-cli --save-dev

  x- add script for react-dev setting webpack   development server to watch (webpack -d --watch)

  x- setup babel to transpile files (since some browser cannot support ES6) babel-loader (npm install babel-loader @babel/core @babel/preset-env @babel/preset-react --save-dev)

  x- configure webpack
    x- create a webpack file
    x- setup webpack to load react components into client
    x- setup entry point
    x- set up output point
    x- add options, with the presets of @babel above, or copied from within babel doc
  install React dev tools
    x- npm run react-dev
    x- should see bundle.js (your transpiler) appear in dist folder

Front End Setup
  x- index.html setup
    x- create html DOC
    x- connect App id
    x- add script for the bundle.js file
  x- verify html renders successfully in the browser

React Components Setup
  x- App.jsx setup
    x- import react documents
    x- export default App
    x- input a simple render to verify that page loads properly
  x- index.js setup
    x- import react documents
    x- import App
    x- set to render App to the DOM
    x- input a simple statement to insure that page renders properly


Back End Setup
  x- server.js setup
    x- require files
    x- install express (verify installed)
    x- direct to client dist folder using static
    x- setup path
    x- use a get request to test that server was set up properly


Creating board
  set up App file
    x- should be a class since there will be state
    x- add the player and win states

  set up the GameBoard file
    x- import react
    x- export GameBoard
    x- create a gameboard component
    x- import gameboard to app
    x- add gambeoard to the render of App
    x- verfy gameboard component is set up properly by seeing if it shows on the webpage
    Create actual gameboard
      x- start with individual squares in a subcomponent
      x- render the squares to a board
      -
